library(RiemBase)
library(RiemBase)
devtools::document()
library(RiemBase)
?getFromNamespace
fun = getFromNamespace("DEoptim","RcppDE")
fun
rm(list=ls())
data = list()
for (i in 1:10){data[[i]] = matrix(rnorm(10,4),nrow=10)}
lapply(matrix, function(x){norm(x%*%t(x)-diag(ncol(x)) < 1e-5})
lapply(matrix, function(x){(norm(x%*%t(x)-diag(ncol(x)) < 1e-5)})
lapply(matrix, function(x){(norm(x%*%t(x)-diag(ncol(x)) < 1e-5))})
lapply(matrix, function(x){(norm(t(x)%*%x-diag(ncol(x)) < 1e-5))})
lapply(data, function(x){(norm(t(x)%*%x-diag(ncol(x)) < 1e-5))})
islist_stiefel <- function(data){
if (!is.null(nrow(data[[1]]))){ # if a matrix
cond1 = (length(unique(unlist(lapply(data, nrow))))==1)
cond2 = (length(unique(unlist(lapply(data, ncol))))==1)
cond3 = all(unlist(lapply(data, function(X){(norm(t(X)%*%X - diag(ncol(X))) < 1e-10)}))==TRUE)
if (cond1&&cond2&&cond3){
return(TRUE)
} else {
return(FALSE)
}
} else {
return(FALSE)
}
}
islist_stiefel(data)
qr
?qr
newdata = list()
for (i in 1:length(data)){newdata[[i]] = qr.Q(qr(data[[i]])) }
islist_stiefel(newdata)
islist_stiefel <- function(data){
if (!is.null(nrow(data[[1]]))){ # if a matrix
cond1 = (length(unique(unlist(lapply(data, nrow))))==1)
cond2 = (length(unique(unlist(lapply(data, ncol))))==1)
cond3 = all(unlist(lapply(data, function(X){(norm(t(X)%*%X - diag(ncol(X))) < 100*.Machine$double.eps)}))==TRUE)
if (cond1&&cond2&&cond3){
return(TRUE)
} else {
return(FALSE)
}
} else {
return(FALSE)
}
}
islist_stiefel(newdata)
library(RiemBase)
riemeuc = riemfactory(data, "euclidean")
library(RiemBase)
riemeuc = riemfactory(data, "euclidean")
riemeuc
data
newdata
View(newdata)
riemfactory(newdata, stiefel)
riemfactory(newdata, "stiefel")
library(RiemBase)
library(RiemBase)
library(RiemBase)
library(RiemBase)
library(RiemBase)
library(RiemBase)
library(RiemBase)
